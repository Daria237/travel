import random
import telebot
from typing import Dict, List, Tuple

BOT_TOKEN = '8266335546:AAGi3S6qoOtIQ07xMV-az8x053zl1uNwzr8'

bot = telebot.TeleBot(BOT_TOKEN)

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}
class UrbanExplorer:
    def __init__(self):
        self.adventure_data = self._load_adventure_data()
        self.additional_tasks = self._load_additional_tasks()
        self.adventure_types = {
            "1": "photographer",
            "2": "historian", 
            "3": "foodie",
            "4": "fun"
        }
        self.districts = {
            "1": "nizhegorodsky",
            "2": "sovetsky",
            "3": "prioksky"
        }
        self.district_names = {
            "nizhegorodsky": "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏–π",
            "sovetsky": "–°–æ–≤–µ—Ç—Å–∫–∏–π",
            "prioksky": "–ü—Ä–∏–æ–∫—Å–∫–∏–π"
        }
        self.type_names = {
            "photographer": "–§–æ—Ç–æ–≥—Ä–∞—Ñ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å üì∏",
            "historian": "–ò—Å—Ç–æ—Ä–∏–∫-–¥–µ—Ç–µ–∫—Ç–∏–≤ üïµÔ∏è",
            "foodie": "–ì–∞—Å—Ç—Ä–æ–Ω–æ–º-–ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ üçú",
            "fun": "–§–∞–Ω–∞—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã—Ö —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π üé≠"
        }
def _load_adventure_data(self) -> Dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –º–∞—Ä—à—Ä—É—Ç–∞—Ö"""
        return {
            "photographer": {
                "nizhegorodsky": [
                    "–ü–æ—á–∞–∏–Ω—Å–∫–∏–π –æ–≤—Ä–∞–≥ - —Å–Ω–∏–º–∏ –∑–∞–±—Ä–æ—à–µ–Ω–Ω—É—é –ª–µ—Å—Ç–Ω–∏—Ü—É –∏ —Å–∫—Ä—ã—Ç—ã–µ –¥–æ–º–∏–∫–∏",
                    "–î–≤–æ—Ä—ã-–∫–æ–ª–æ–¥—Ü—ã –Ω–∞ —É–ª. –ö–æ—Ä–æ–ª–µ–Ω–∫–æ - –ø–æ–π–º–∞–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—É '–≥–ª—É–±–∏–Ω—ã' –≥–æ—Ä–æ–¥–∞",
                    "–ó–∞–¥–Ω–∏–π —Ñ–∞—Å–∞–¥ –ë–ª–∏–Ω–æ–≤—Å–∫–æ–≥–æ –ø–∞—Å—Å–∞–∂–∞ - –∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–∞—è —ç—Å—Ç–µ—Ç–∏–∫–∞ –∏ –∫–∏—Ä–ø–∏—á"
                ],
                "sovetsky": [
                    "–î–æ–º-–∫–æ—Ä–∞–±–ª—å –Ω–∞ –í–∞—Ä–≤–∞—Ä—Å–∫–æ–π - —à–µ–¥–µ–≤—Ä —Å–æ–≤–µ—Ç—Å–∫–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–∏–∑–º–∞",
                    "–°–º–æ—Ç—Ä–æ–≤–∞—è —É –°—Ç–∞—Ä–æ–≥–æ –†–∞–∫–µ—Ç–Ω–æ–≥–æ –£—á–∏–ª–∏—â–∞ - –≤–∏–¥—ã –±–µ–∑ —Ç—É—Ä–∏—Å—Ç–æ–≤",
                    "–ü–æ–¥–≤–µ—Å–Ω–æ–π –º–æ—Å—Ç –≤ –ø–∞—Ä–∫–µ –®–≤–µ–π—Ü–∞—Ä–∏—è - –¥–∏–Ω–∞–º–∏—á–Ω—ã–µ –∫–∞–¥—Ä—ã –∏ –æ—â—É—â–µ–Ω–∏–µ –ø–æ–ª–µ—Ç–∞"
                ],
                "prioksky": [
                    "–ó–∞–±—Ä–æ—à–µ–Ω–Ω–∞—è —É—Å–∞–¥—å–±–∞ –ë–∞—Ç–∞—à–µ–≤–∞ –≤ –ö–∞–Ω–∞–≤–∏–Ω—Å–∫–æ–º –ª–µ—Å—É - –º–µ–ª–∞–Ω—Ö–æ–ª–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—è",
                    "–†–∞–π—Å–∫–∏–π —É–≥–æ–ª–æ–∫ - —Å–∞–º–æ–¥–µ–ª—å–Ω—ã–π –ø–∞—Ä–∫ —Å –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç–∞–º–∏ –≤ —á–∞—Å—Ç–Ω–æ–º —Å–µ–∫—Ç–æ—Ä–µ",
                    "–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω—ã–µ –ø–µ–π–∑–∞–∂–∏ —É –ì–æ—Ä—å–∫–æ–≤—Å–∫–æ–π –∂–µ–ª–µ–∑–Ω–æ–π –¥–æ—Ä–æ–≥–∏ - –≤–∏–¥ —Å –ø–µ—à–µ—Ö–æ–¥–Ω—ã—Ö –º–æ—Å—Ç–æ–≤"
                ]
            },
            "historian": {
                "nizhegorodsky": [
                    "–ë–µ–ª–∞—è –ª–∞–¥—å—è –Ω–∞ –û—Ç–∫–æ—Å–µ - –º–µ—Å—Ç–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ –ö—É–ª–∏–±–∏–Ω–∞ —Å –≤–æ–¥–æ—Ö–æ–¥–æ–º",
                    "–î–æ–º –ì–æ—Ä—å–∫–æ–≥–æ –Ω–∞ —É–ª. –°–µ–º–∞—à–∫–æ - —Ä–∞—Å–∫—Ä–æ–π –∏—Å—Ç–æ—Ä–∏—é '–¥–æ–º–∞-—Å–∞–º–æ—É–±–∏–π—Ü—ã'",
                    "–ü–æ–¥–∑–µ–º–Ω—ã–µ —Ö–æ–¥—ã —É –ö—Ä–µ–º–ª—è - –∏–∑—É—á–∏ –ª–µ–≥–µ–Ω–¥—ã –æ –ª–∞–±–∏—Ä–∏–Ω—Ç–∞—Ö –ø–æ–¥ —Å—Ç–µ–Ω–∞–º–∏"
                ],
                "sovetsky": [
                    "–ì–∞—É–±–∏—Ü–∞ –Ω–∞ –ù–∞–±–µ—Ä–µ–∂–Ω–æ–π –§–µ–¥–æ—Ä–æ–≤—Å–∫–æ–≥–æ - —Å–∫—Ä—ã—Ç–∞—è –≤ –∑–µ–ª–µ–Ω–∏ —Ä–µ–ª–∏–∫–≤–∏—è –≤–æ–π–Ω—ã",
                    "–ó–¥–∞–Ω–∏–µ –±—ã–≤—à–µ–≥–æ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞ '–≠–¥–∏—Å–æ–Ω' - —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ—Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
                    "–ü–∞–º—è—Ç–Ω–∏–∫ '–ü–æ–±–µ–≥ –∏–∑ –°–°–°–†' –≤ –ø–∞—Ä–∫–µ –î—É–±–∫–∏ - –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —Å–∫—É–ª—å–ø—Ç–æ—Ä–∞"
                ],
                "prioksky": [
                    "–ú–æ–ª–∏—Ç–æ–≤—Å–∫–∏–π –º–æ—Å—Ç - –∏—Å—Å–ª–µ–¥—É–π –∏—Å—Ç–æ—Ä–∏—é —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –¥–æ–≤–æ–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã",
                    "–ü–æ—Å–µ–ª–æ–∫ '–°–≤–µ—Ç–ª–æ—è—Ä—Å–∫–∏–π' - –Ω–∞–π–¥–∏ —Å–ª–µ–¥—ã —Å—Ç–∞—Ä–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø–æ—Å–µ–ª–∫–∞",
                    "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è —Ç–µ–ª–µ–±–∞—à–Ω—è - —É–∑–Ω–∞–π –º–∏—Ñ—ã –∏ –ø—Ä–∏—á–∏–Ω—ã —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å"
                ]
            },
            # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ä—à—Ä—É—Ç–∞—Ö
        }
def _load_additional_tasks(self) -> Dict:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π"""
        return {
            "photographer": [
                "–°–Ω–∏–º–∏ '–ø–æ—Ç–∞–µ–Ω–Ω—ã–π –¥–≤–æ—Ä–∏–∫' - —Ç–∞–∫–æ–µ –º–µ—Å—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ",
                "–ü–æ–π–º–∞–π –≤ –∫–∞–¥—Ä –∏–¥–µ–∞–ª—å–Ω—É—é —Å–∏–º–º–µ—Ç—Ä–∏—é –∏–ª–∏ –Ω–∞—Ä–æ—á–∏—Ç—ã–π —Ö–∞–æ—Å",
                "–ù–∞–π–¥–∏ –∏ —Å–Ω–∏–º–∏ —Å–∞–º—ã–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–π –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏-–º—É—Ä–∞–ª –≤ —Ä–∞–π–æ–Ω–µ",
                "–°–æ–∑–¥–∞–π –ø–æ—Ä—Ç—Ä–µ—Ç '–Ω–µ–≤–∏–¥–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞' —Ä–∞–π–æ–Ω–∞ (–¥–≤–æ—Ä–Ω–∏–∫, –ø—Ä–æ–¥–∞–≤–µ—Ü, –º—É–∑—ã–∫–∞–Ω—Ç)",
                "–°–Ω–∏–º–∏ –∫–æ–Ω—Ç—Ä–∞—Å—Ç: '–°—Ç–∞—Ä–æ–µ vs –ù–æ–≤–æ–µ' –≤ –æ–¥–Ω–æ–º –∫–∞–¥—Ä–µ"
            ],
            "historian": [
                "–ù–∞–π–¥–∏ '–∫–∞–ø—Å—É–ª—É –≤—Ä–µ–º–µ–Ω–∏' - –ø–æ—Å–ª–∞–Ω–∏–µ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ (–ø–∞–º—è—Ç–Ω—É—é —Ç–∞–±–ª–∏—á–∫—É)",
                "–û–ø—Ä–µ–¥–µ–ª–∏, –≤ –∫–∞–∫–æ–º —Å—Ç–∞—Ä–æ–º –∑–¥–∞–Ω–∏–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä –∂–∏–≤—É—Ç/—Ä–∞–±–æ—Ç–∞—é—Ç –ª—é–¥–∏",
                "–û—Ç—ã—â–∏ —Å–ª–µ–¥—ã '–∏—Å—á–µ–∑–Ω—É–≤—à–µ–≥–æ' —Ä–∞–π–æ–Ω–∞ (–º–µ—Å—Ç–æ, –≥–¥–µ —Ä–∞–Ω—å—à–µ –±—ã–ª —Ö—Ä–∞–º)",
                "–†–∞—Å—à–∏—Ñ—Ä—É–π —Å—Ç–∞—Ä—É—é –≤—ã–≤–µ—Å–∫—É –∏–ª–∏ —Ä–µ–∫–ª–∞–º—É, —Å–æ—Ö—Ä–∞–Ω–∏–≤—à—É—é—Å—è –Ω–∞ —Å—Ç–µ–Ω–µ –∑–¥–∞–Ω–∏—è",
                "–ù–∞–π–¥–∏ —Å–∞–º—ã–π —Å—Ç–∞—Ä—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä–∞–π–æ–Ω–µ (—Ñ–æ–Ω–∞—Ä–Ω—ã–π —Å—Ç–æ–ª–±, –ª—é–∫, —Ç—Ä—É–±—É)"
            ],
            "foodie": [
                "–ü–æ–ø—Ä–æ–±—É–π –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ –≥–æ—Ç–æ–≤–∏—Ç —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç –ø–æ–≤–∞—Ä –≤ —ç—Ç–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏",
                "–ù–∞–π–¥–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –≥–¥–µ –∏–Ω—Ç–µ—Ä—å–µ—Ä —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é",
                "–°–ø—Ä–æ—Å–∏, –∏–∑ –∫–∞–∫–∏—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö –Ω–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≥–æ—Ç–æ–≤—è—Ç",
                "–ü–æ–ø—Ä–æ–±—É–π '–ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–Ω—É—é' —Ä—É—Å—Å–∫—É—é –∫—É—Ö–Ω—é",
                "–ó–∞–∫–∞–∂–∏ –Ω–∞–ø–∏—Ç–æ–∫/–¥–µ—Å–µ—Ä—Ç, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–≤—è–∑–∞–Ω–æ —Å –ù–∏–∂–Ω–∏–º –ù–æ–≤–≥–æ—Ä–æ–¥–æ–º"
            ],
            "fun": [
                "–ö—É–ø–∏ —Å—É–≤–µ–Ω–∏—Ä –Ω–µ –≤ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–º –º–∞–≥–∞–∑–∏–Ω–µ, –∞ –≤ –º–µ—Å—Ç–Ω–æ–º –∞—Ä—Ç-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ",
                "–ü–æ—Å–∏–¥–∏ 10 –º–∏–Ω—É—Ç –Ω–∞ —Å–∫–∞–º–µ–π–∫–µ –≤ —Ç–∏—Ö–æ–º –¥–≤–æ—Ä–µ, –Ω–∞–±–ª—é–¥–∞—è –∑–∞ –∂–∏–∑–Ω—å—é",
                "–°—Ö–æ–¥–∏ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≤—ã—Å—Ç–∞–≤–∫—É –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å–∞–∂, –µ—Å–ª–∏ –æ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏",
                "–ù–∞–π–¥–∏ –º–µ—Å—Ç–æ —Å –∂–∏–≤–æ–π –º—É–∑—ã–∫–æ–π –∏ –ø–æ—Å–ª—É—à–∞–π 1-2 –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏",
                "–°–ø—Ä–æ—Å–∏ —É –∫–∞—Å—Å–∏—Ä–∞, –∫–∞–∫–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ–Ω–∏ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∂–¥—É—Ç"
            ]
        }


def generate_adventure(self, adventure_type: str, district: str) -> Dict:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º"""
    # –í—ã–±–∏—Ä–∞–µ–º 3 —Å–ª—É—á–∞–π–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞
    routes = self.adventure_data[adventure_type][district]
    selected_routes = random.sample(routes, min(3, len(routes)))

    # –í—ã–±–∏—Ä–∞–µ–º 3 —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è
    tasks = self.additional_tasks[adventure_type]
    selected_tasks = random.sample(tasks, min(3, len(tasks)))

    return {
        "type": adventure_type,
        "type_name": self.type_names[adventure_type],
        "district": district,
        "district_name": self.district_names[district],
        "routes": selected_routes,
        "tasks": selected_tasks
    }


def format_adventure_message(self, adventure: Dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è"""
    message = "üéä" * 10 + " –í–ê–® –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ô –ö–í–ï–°–¢! " + "üéä" * 10
    message += f"\n\nüè∑  –°—Ç–∏–ª—å: {adventure['type_name']}"
    message += f"\nüìç –†–∞–π–æ–Ω: {adventure['district_name']}"

    message += f"\n\nüó∫  –í–ê–® –ú–ê–†–®–†–£–¢:"
    for i, route in enumerate(adventure['routes'], 1):
        message += f"\n   {i}. {route}"

    message += f"\n\nüéØ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ó–ê–î–ê–ù–ò–Ø:"
    for i, task in enumerate(adventure['tasks'], 1):
        message += f"\n   ‚Ä¢ {task}"

    # –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–∫–∏
    times = ["~2 —á–∞—Å–∞", "~2.5 —á–∞—Å–∞", "~3 —á–∞—Å–∞", "~1.5 —á–∞—Å–∞"]
    message += f"\n\n‚è±  –í—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–∫–∏: {random.choice(times)}"

    message += "\n\n" + "‚ú®" * 15
    message += "\n   –•–æ—Ä–æ—à–µ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –ù–∏–∂–Ω–µ–º!"
    message += "\n" + "‚ú®" * 15

    return message
explorer = UrbanExplorer()

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ /help"""
    welcome_text = """
üèôÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ UrbanExplorer - –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π –≤ –ù–∏–∂–Ω–µ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ!

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞!

üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/adventure - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ
/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–í—ã–±–µ—Ä–∏ /adventure —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!
    """
    bot.reply_to(message, welcome_text)

@bot.message_handler(commands=['adventure'])
def start_adventure(message):
    """–ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"""
    chat_id = message.chat.id
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π
    type_list = """
üéØ –í–´–ë–ï–†–ò –¢–ò–ü –ü–†–ò–ö–õ–Æ–ß–ï–ù–ò–Ø (–æ—Ç–ø—Ä–∞–≤—å —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 4):

1 - –§–æ—Ç–æ–≥—Ä–∞—Ñ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å üì∏
2 - –ò—Å—Ç–æ—Ä–∏–∫-–¥–µ—Ç–µ–∫—Ç–∏–≤ üïµÔ∏è
3 - –ì–∞—Å—Ç—Ä–æ–Ω–æ–º-–ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ üçú
4 - –§–∞–Ω–∞—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã—Ö —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π üé≠

–û—Ç–ø—Ä–∞–≤—å —Ü–∏—Ñ—Ä—É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞:
    """
    
    bot.send_message(chat_id, type_list)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states[chat_id] = {"step": "choose_type"}